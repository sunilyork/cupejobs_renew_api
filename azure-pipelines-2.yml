# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cb4d46bf-14c3-49f3-85bf-56bb795ff580'
  imageRepository: 'sunilyorkcupejobsrenewapi'
  containerRegistry: 'sunilmanikonregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

pool:
  vmImage: $(vmImageName)

stages: 
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: BuildDependenciesJob
    displayName: Build dependencies
    # pool:
    #   vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10'
      displayName: 'Use Python 3.10'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - task: DownloadSecureFile@1
      inputs:
        secureFile: '.env.test'
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Agent.TempDirectory)
        Contents: '**\.env.test'
        TargetFolder: $(Build.SourcesDirectory)
      displayName: 'Copy .env.test'
    - script: |
        pip install pytest pytest-azurepipelines
        pytest

  # - job: PytestJob
  #   displayName: 'pytest dependencies'
  #   steps:
  #     - task: DownloadSecureFile@1
  #       inputs:
  #         secureFile: '.env.test'
  #     - task: CopyFiles@2
  #       inputs:
  #         SourceFolder: $(Agent.TempDirectory)
  #         Contents: '**\.env.test'
  #         TargetFolder: $(Build.SourcesDirectory)
  #       displayName: 'Copy .env.test'
  #     - script: |
  #         pip install pytest pytest-asyncio pytest-env pytest-mock pytest-randomly pytest-azurepipelines
  #         pytest
          
  # - job: DockerBuildJob
  #   displayName: 'docker build display name'
  #   steps:
  #   - task: Docker@2
  #     displayName: Build and push an image to container registry
  #     inputs:
  #       command: buildAndPush
  #       repository: $(imageRepository)
  #       dockerfile: $(dockerfilePath)
  #       containerRegistry: $(dockerRegistryServiceConnection)
  #       tags: |
  #         $(tag)