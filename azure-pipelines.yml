# Docker

# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main
  # - feature/*

resources:
- repo: self


variables:
  # containerRegistry: 'sunilmanikonregistry.azurecr.io'
  # containerRegistry: 'sunilmanikonregistry'
  dockerRegistryServiceConnection: 'sunilmanikondockerregistryserviceconnection'
  imageRepository: 'cupejobs' 
  tag: '$(Build.BuildId)'
  
  ##[warning]Specifying an exact version is not recommended on Microsoft-Hosted agents. Patch versions of Python can be replaced by new ones on Hosted agents without notice, which will cause builds to fail unexpectedly. It is recommended to specify only major or major and minor version (Example: `3` or `3.9`)
  # Python version: 3.10
  pythonVersion: '3.10.9'

  # Agent VM image name
  vmImageName: 'ubuntu-22.04'

# Microsoft hosted pool
# pool:
#   vmImage: $(vmImageName)

# Self-hosted pool
pool:
  name: 'default'
  # demands:
  #   - agent.name -equals mcbride-mac-mini

stages: 
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.10.9'
          disableDownloadFromRegistry: true
          addToPath: true
          architecture: 'x86'

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install dependencies'

      - script: |
          black --check .
          flake8 .
        displayName: 'Linting - Style guide enforcement'
    
    # - task: DownloadSecureFile@1
    #   inputs:
    #     secureFile: '.env.test'
    # - task: DownloadSecureFile@1
    #   inputs:
    #     secureFile: 'public.pem'
    # - task: DownloadSecureFile@1
    #   inputs:
    #     secureFile: 'private.pem'
    # - task: DownloadSecureFile@1
    #   inputs:
    #     secureFile: 'jwt_secret_key.txt'

    # - task: CopyFiles@2
    #   inputs:
    #     SourceFolder: $(Agent.TempDirectory)
    #     Contents: '**'
    #     TargetFolder: $(Build.SourcesDirectory)
    #   displayName: 'Copy environment files'
    
    # Run tests, output test results in JUnit format, and output code coverage results in Cobertura XML format
    # - script: |
    #     pip install pytest pytest-mock pytest-azurepipelines
    #     pytest
    #   displayName: 'pytest'

    # - task: DeleteFiles@1
    #   inputs:
    #     SourceFolder: $(Build.SourcesDirectory)
    #     Contents: |
    #       .env.test
    #       public.pem
    #       private.pem
    #       jwt_secret_key.txt

    # - task: Docker@2
    #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    #   inputs:
    #     containerRegistry: $(containerRegistry)
    #     repository: $(imageName)
    #     command: 'buildAndPush'
    #     Dockerfile: $(dockerfilePath)
    #     tags: |
    #       $(tag)
    #   displayName: Build and push an image to container registry

      # - task: Docker@2
      #   displayName: Build and push an image to azure container registry
      #   # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      #   inputs:
      #     containerRegistry: $(dockerRegistryServiceConnection)
      #     repository: $(imageRepository)
      #     command: 'buildAndPush'
      #     Dockerfile: $(dockerfilePath)
      #     tags: |
      #       $(tag)

      - task: Docker@2
        displayName: Build and push an image to azure container registry
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
        inputs:
          containerRegistry: $(dockerRegistryServiceConnection)
          repository: $(imageRepository)
          command: 'buildAndPush'
          Dockerfile: $(dockerfilePath)
          tags: |
            $(tag)