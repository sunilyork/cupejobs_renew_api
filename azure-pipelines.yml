# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  IMAGE_REGISTRY_CONNECTION: 'cb4d46bf-14c3-49f3-85bf-56bb795ff580'
  IMAGE_REPOSITORY: 'sunilyorkcupejobsrenewapi'
  TAG: '$(Build.BuildId)'
  
  # Python version: 3.10.9
  PYTHON_VERSION: '3.10.9'

  # Agent VM image name
  VM_IMAGE: 'ubuntu-latest'

pool:
  # Agent VM image name
  vmImage: $(VM_IMAGE)

stages:
- stage: Build
  displayName: Install dependencies and run unit tests
  jobs:
  - job: BuildJob
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
      displayName: 'Use Python $(PYTHON_VERSION)'
    - task: DownloadSecureFile@1
      inputs:
        secureFile: '.env.test'
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Agent.TempDirectory)
        Contents: '**\.env.test'
        TargetFolder: $(Build.SourcesDirectory)
      displayName: 'pytest'
    - script: |
        python3 -m pip install --upgrade pip
        python3 -m pip install pip-tools
        python3 -m piptools compile
        pip install -r requirements.txt
        pip install pytest-azurepipelines
        pytest  

- stage: Docker
  displayName: Docker stage 
  jobs:
  - job: DockerPushImage
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: $(IMAGE_REGISTRY_CONNECTION)
        repository: $(IMAGE_REPOSITORY)
        command: 'buildAndPush'
        dockerfile: '**/Dockerfile'
        tags: '$(TAG)'
