# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'bb096673-183a-4a2f-9e5c-c11d4a015492'
  imageRepository: 'sunilyorkcupejobsrenewapi'
  containerRegistry: 'sunilmanikonregistry27.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      # name: 'default'
    steps:
    # - task: UsePythonVersion@0
    #   inputs:
    #     versionSpec: '3.10.9'
    #     disableDownloadFromRegistry: true
    #     addToPath: true
    #     architecture: 'x86'
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'
    - script: |
        black --check .
        flake8 .
      displayName: 'Linting - Style guide enforcement'
    - task: DownloadSecureFile@1
      inputs:
        secureFile: '.env.test'
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'public.pem'
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'private.pem'
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'jwt_secret_key.txt'

    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Agent.TempDirectory)
        Contents: '**'
        TargetFolder: $(Build.SourcesDirectory)
      displayName: 'Copy environment files'
    
    - script: |
        pip install pytest pytest-mock pytest-azurepipelines
        pytest
      displayName: 'pytest'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
